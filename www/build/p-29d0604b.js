class i{constructor(i=null,o={}){if(this.apiKey=i,this.options=o,"undefined"==typeof window)throw new Error("google-maps is supported only in browser environment")}load(){return void 0!==this.api?Promise.resolve(this.api):void 0!==this.loader?this.loader:(window[i.CALLBACK_NAME]=()=>{if(this.api=window.google,void 0===this.resolve)throw new Error("Should not happen");this.resolve(this.api)},window.gm_authFailure=()=>{if(void 0===this.reject)throw new Error("Should not happen");this.reject(new Error("google-maps: authentication error"))},this.loader=new Promise(((i,o)=>{this.resolve=i,this.reject=o;const t=document.createElement("script");t.src=this.createUrl(),t.async=!0,t.onerror=i=>o(i),document.head.appendChild(t)})))}createUrl(){const o=[`callback=${i.CALLBACK_NAME}`];this.apiKey&&o.push(`key=${this.apiKey}`);for(let i in this.options)if(this.options.hasOwnProperty(i)){let t=this.options[i];"version"===i&&(i="v"),"libraries"===i&&(t=t.join(",")),o.push(`${i}=${t}`)}return`https://maps.googleapis.com/maps/api/js?${o.join("&")}`}}i.CALLBACK_NAME="_dk_google_maps_loader_cb";export{i as L}